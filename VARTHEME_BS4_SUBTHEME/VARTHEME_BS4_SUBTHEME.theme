<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

 use Drupal\Core\Form\FormStateInterface;
 use Drupal\file\Entity\File;
 use Drupal\image\Entity\ImageStyle;
 use Drupal\views_bootstrap\ViewsBootstrap;
 use Drupal\Core\Template\Attribute;

/**
 * Implements hook_theme_registry_alter().
 */
function VARTHEME_BS4_SUBTHEME_theme_registry_alter(&$theme_registry) {
  // Varbase media path.
  $vartheme_bs4_path = Drupal::service('theme_handler')->getTheme('VARTHEME_BS4_SUBTHEME')->getPath();
  $theme_registry['entity_embed_container']['path'] = $vartheme_bs4_path . '/templates/entity-embed';
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function VARTHEME_BS4_SUBTHEME_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    if(is_numeric($node)) {
      $node = \Drupal\node\Entity\Node::load($node);
    }
    if($node instanceof \Drupal\node\NodeInterface) {
      array_splice($suggestions, 1, 0, 'page__' . $node->bundle());
    }
  }
}


/**
 * Implements hook_preprocess_paragraph().
 */
function VARTHEME_BS4_SUBTHEME_preprocess_paragraph(&$variables) {
  $file_path = null;
  if (isset($variables['paragraph']->bp_image_field)
    && isset($variables['paragraph']->bp_image_field->target_id)) {

    // Get the target id and build the url.
    $paragraph = &$variables['paragraph'];
    if (isset($paragraph->get('bp_image_field')->entity)
      && isset($paragraph->get('bp_image_field')->entity->field_media_image)
      && isset($paragraph->get('bp_image_field')->entity->field_media_image->target_id)) {

      $target_id = $paragraph->get('bp_image_field')->entity->field_media_image->target_id;
      $file = File::load($target_id);
      if (isset($file)) {
        $file_uri = $file->getFileUri();
        $style = ImageStyle::load('de2e');
        $file_path = $style->buildUrl($file_uri);
      }
    }
  }

  $width_value = null;
  if (isset($variables['paragraph']->bp_width)
    && isset($variables['paragraph']->bp_width->value)) {

    $width_value = $variables['paragraph']->bp_width->value;
  }

  $width_map = [
    'paragraph--width--tiny' => 'col-md-4 offset-md-4 col-sm-8 offset-sm-2',
    'paragraph--width--narrow' => 'col-md-6 offset-md-3 col-sm-10 offset-sm-1',
    'paragraph--width--medium' => 'col-md-8 offset-md-2',
    'paragraph--width--wide' => 'col-md-10 offset-md-1',
    'paragraph--width--full' => 'col-12',
    'bg-edge2edge' => 'bg-edge2edge col-12 no-padding',
  ];


  $width = 'col-12';
  if (isset($width_map[$width_value])) {
    $width = $width_map[$width_value];
  }


  $custom_paragraph_classes_value = null;
  if (isset($variables['paragraph']->bp_classes)
      && isset($variables['paragraph']->bp_classes->value)) {
    $custom_paragraph_classes_value = $variables['paragraph']->bp_classes->value;
  }

  $gutter_value = FALSE;
  if (isset($variables['paragraph']->bp_gutter)
      && isset($variables['paragraph']->bp_gutter->value)) {
    $gutter_value = $variables['paragraph']->bp_gutter->value;
  }

  $title_status = FALSE;
  if (isset($variables['paragraph']->bp_title_status)
      && isset($variables['paragraph']->bp_title_status->value)) {
    $title_status = $variables['paragraph']->bp_title_status->value;
  }

  // Add variables to template.
  $variables["VBP"] = [
    'background_image' => [
      'type' => 'image',
      'url' => $file_path,
    ],
    'bp_width' => [
      'type' => 'string',
      'value' => $width,
    ],
    'bp_classes' => [
      'type' => 'string',
      'value' => $custom_paragraph_classes_value,
    ],
    'bp_gutter' => [
      'type' => 'bool',
      'value' => $gutter_value,
    ],
    'bp_title_status' => [
      'type' => 'bool',
      'value' => $title_status,
    ],
  ];
}

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 */
function VARTHEME_BS4_SUBTHEME_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = array(
      'bg-primary' => t('Primary'),
      'bg-secondary' => t('Secondary'),
      'bg-light' => t('Light'),
      'bg-dark' => t('Dark'),
      'bg-white' => t('White'),
      'bg-transparent' => t('Transparent'),
  );
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = array(
      'bg-primary' => t('Primary'),
      'bg-secondary' => t('Secondary'),
      'bg-light' => t('Light'),
      'bg-dark' => t('Dark'),
      'bg-white' => t('White'),
      'bg-transparent' => t('Transparent'),
  );
}
